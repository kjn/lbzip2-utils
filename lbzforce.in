#!/bin/sh
# lbzforce: force a bz2 extension on all lbzip2 files so that lbzip2 will not
# compress them twice.
#
# This can be useful for files with names truncated after a file transfer.
# 12345678901234 is renamed to 12345678901.bz2


# Copyright (C) 2002, 2007, 2010 Free Software Foundation
# Copyright (C) 1993 Jean-loup Gailly

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

bindir=@bindir@
case $1 in
--__bindir) bindir=${2?}; shift; shift;;
esac
PATH=$bindir:$PATH; export PATH

version="lbzforce (lbzip2-utils) @VERSION@
Copyright (C) 2010-2013 Free Software Foundation, Inc.
This is free software.  You may redistribute copies of it under the terms of
the GNU General Public License <http://www.gnu.org/licenses/gpl.html>.
There is NO WARRANTY, to the extent permitted by law.

Written by Jean-loup Gailly."

usage="Usage: $0 [FILE]...
Force a .bz2 extension on all compressed FILEs so that lbzip2 will
not compress them twice."

if test $# = 0; then
  echo >&2 "$0: invalid number of operands; try \`$0 --help' for help"
  exit 1
fi

res=0
for i do
  case "$i" in
  --h*) exec echo "$usage";;
  --v*) exec echo "$version";;
  *.bz2 | *.tbz | *.tbz2 | *.tz2) continue;;
  esac

  if test ! -f "$i" ; then
    echo lbzforce: $i not a file
    res=1
    continue
  fi

  if head -c4 < "$i" 2>/dev/null | grep 'BZh[1-9]' > /dev/null; then

    new="$i.bz2"
    if mv "$i" "$new"; then
      echo $i -- replaced with $new
    else
      res=$?
    fi
  fi
done
exit $res
